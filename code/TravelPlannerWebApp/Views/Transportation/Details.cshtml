@using TravelPlannerLibrary.Models
@model TravelPlannerLibrary.Models.Transportation

@{
    ViewBag.Title = "Details";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <title>Details</title>
</head>
<body>
    <div>
        <h4>Transportation</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Type)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.StartTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StartTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.EndTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EndTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Origin)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Origin)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Destination)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Destination)
            </dd>

            <dt>
                Estimated Travel Time:
            </dt>

            <dd>
                @Html.TextBoxFor(model => model.EndTime, new { id = "travelTime" })
            </dd>

            <dt>
                Trip Name
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Trip.Name)
            </dd>

        </dl>
    </div>

    <div id="container">
        <div id="map"></div>
    </div>

    <p>
        @Html.ActionLink("Back to List", "../Trips/Details", new { id = LoggedUser.SelectedTrip.Id })
    </p>


    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDJEezkTFgj0PAnzJQJVVEhfZbpUmH27s0&callback=initMap&v=weekly"
            async></script>
</body>
</html>

<script>
    function initMap() {
        const directionsService = new google.maps.DirectionsService();
        const directionsRenderer = new google.maps.DirectionsRenderer();
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 7,
            center: { lat: 41.85, lng: -87.65 },
        });

        directionsRenderer.setMap(map);

        directionsService
            .route({
                origin: {
                    query: @Html.Raw(Json.Encode(Model.Origin)),
                },
                destination: {
                    query: @Html.Raw(Json.Encode(Model.Destination)),
                },
                travelMode: @Html.Raw(Json.Encode(Model.Type)),
            })
            .then((response) => {
                directionsRenderer.setDirections(response);
            })
            .catch((e) => window.alert("Directions request failed due to " + status));


    }
</script>