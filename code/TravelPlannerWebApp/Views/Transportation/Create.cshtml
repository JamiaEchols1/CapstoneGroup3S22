@using TravelPlannerLibrary.Models
@model WebApplication4.Models.AddedTransportation

@{
    ViewBag.Title = "Create";
}

<h2>Create Transportation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Trip Details : @ViewBag.TripDetails</h4>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Origin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.ErrorMessage != null)
        {
            <p style="color: red">@ViewBag.ErrorMessage</p>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "../Trips/Details", new { id = LoggedUser.SelectedTrip.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyDJEezkTFgj0PAnzJQJVVEhfZbpUmH27s0"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window,
        'load',
        function () {
            var origin = new google.maps.places.Autocomplete(document.getElementById('Origin'),
                {
                    types: ['establishment'],
                    componentRestrictions: { 'country': ['AU', 'USA', 'UK'] },
                    fields: ['place_id', 'geometry', 'name']
                }
            );
            var destination = new google.maps.places.Autocomplete(document.getElementById('Destination'),
                {
                    types: ['establishment'],
                    componentRestrictions: { 'country': ['AU', 'USA', 'UK'] },
                    fields: ['place_id', 'geometry', 'name']
                }
            );
        });
</script>

<script type="text/javascript">
    $(function() {
        $('#StartTime').datetimepicker({
            minDate: new moment("@ViewBag.StartDate"),
        }).on('dp.change',
            function(e) {
                $(this).data('DateTimePicker').hide();
            });
        $('#EndTime').datetimepicker({
            minDate: new moment("@ViewBag.StartDate"),
        }).on('dp.change',
            function(e) {
                $(this).data('DateTimePicker').hide();
            });
    });
</script>